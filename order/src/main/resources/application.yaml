spring:
  application:
    name: order-service
  profiles:
    active: dev
  datasource:
#    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/mydatabase}
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/mydatabase}
    username: ${SPRING_DATASOURCE_USERNAME:myuser}
    password: ${SPRING_DATASOURCE_PASSWORD:secret}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        default_schema: public
    open-in-view: false
server:
  port: 8889
grpc:
  server:
    port: 9091
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
    jmx:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
      enabled: true
    metrics:
      enabled: true
    info:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: order-service
info:
  app:
    name: Order Service
    description: Order management module
    version: 1.0.0
logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
    org.springframework.orm.jpa: TRACE
    org.springframework.transaction: DEBUG
    org.springframework.boot.autoconfigure: DEBUG
    org.springframework.security: DEBUG
    org.springframework.boot.actuate: DEBUG
    org.plasma.order: DEBUG
    io.micrometer: DEBUG